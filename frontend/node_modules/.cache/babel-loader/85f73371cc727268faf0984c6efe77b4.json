{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nooxy\\\\Downloads\\\\proj_final\\\\proj_1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport SensorChart from './components/SensorChart';\nimport DataInputForm from './components/DataInputForm'; // Import the new component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`).then(response => response.json()).then(data => setData(data)).catch(err => setError('Failed to fetch initial data'));\n    socket.on('update', newData => {\n      setData(prevData => [...prevData, newData]); // Add the new data to the existing dataset\n    });\n    socket.on('error', errorMsg => {\n      setError(errorMsg.error);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Environmental Data Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(SensorChart, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataInputForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","SensorChart","DataInputForm","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_BACKEND_URL","App","_s","data","setData","error","setError","fetch","then","response","json","catch","err","on","newData","prevData","errorMsg","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nooxy/Downloads/proj_final/proj_1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport SensorChart from './components/SensorChart';\r\nimport DataInputForm from './components/DataInputForm';  // Import the new component\r\n\r\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\r\n\r\nfunction App() {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`)\r\n            .then(response => response.json())\r\n            .then(data => setData(data))\r\n            .catch(err => setError('Failed to fetch initial data'));\r\n    \r\n        socket.on('update', newData => {\r\n            setData(prevData => [...prevData, newData]);  // Add the new data to the existing dataset\r\n        });\r\n    \r\n        socket.on('error', errorMsg => {\r\n            setError(errorMsg.error);\r\n        });\r\n    \r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Real-Time Environmental Data Monitoring</h1>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            <SensorChart data={data} />\r\n            <DataInputForm />  {/* Add the DataInputForm component here */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGL,EAAE,CAACM,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAAC;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZiB,KAAK,CAAC,GAAGT,OAAO,CAACC,GAAG,CAACC,qBAAqB,WAAW,CAAC,CACjDQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACL,IAAI,IAAIC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC3BQ,KAAK,CAACC,GAAG,IAAIN,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IAE3DT,MAAM,CAACgB,EAAE,CAAC,QAAQ,EAAEC,OAAO,IAAI;MAC3BV,OAAO,CAACW,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAED,OAAO,CAAC,CAAC,CAAC,CAAE;IAClD,CAAC,CAAC;IAEFjB,MAAM,CAACgB,EAAE,CAAC,OAAO,EAAEG,QAAQ,IAAI;MAC3BV,QAAQ,CAACU,QAAQ,CAACX,KAAK,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAM;MACTR,MAAM,CAACoB,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBvB,OAAA;MAAAuB,QAAA,EAAI;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/ClB,KAAK,iBAAIT,OAAA;MAAGsB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C3B,OAAA,CAACH,WAAW;MAACU,IAAI,EAAEA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3B3B,OAAA,CAACF,aAAa;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd;AAACrB,EAAA,CAhCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}