{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nooxy\\\\Downloads\\\\proj_final\\\\proj_1\\\\frontend\\\\src\\\\components\\\\SensorChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-moment'; // Import moment adapter for Chart.js\nimport { Chart, TimeScale } from 'chart.js';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(TimeScale); // Register the time scale\n\nfunction SensorChart({\n  data,\n  onPointClick\n}) {\n  const chartData = {\n    labels: data.map(d => new Date(d.timestamp)),\n    datasets: [{\n      label: 'Temperature (째C)',\n      data: data.map(d => ({\n        x: new Date(d.timestamp),\n        y: d.temperature\n      })),\n      fill: false,\n      borderColor: 'red',\n      yAxisID: 'y_temp'\n    }, {\n      label: 'Humidity (%)',\n      data: data.map(d => ({\n        x: new Date(d.timestamp),\n        y: d.humidity\n      })),\n      fill: false,\n      borderColor: 'blue',\n      yAxisID: 'y_humidity'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'DD/MM/YYYY' // Change to dd/mm/yyyy format\n          },\n          tooltipFormat: 'DD/MM/YYYY' // Change tooltip to dd/mm/yyyy format\n        },\n        ticks: {\n          autoSkip: false,\n          maxRotation: 0,\n          minRotation: 0\n        },\n        min: data.length > 0 ? new Date(data[0].timestamp).setDate(new Date(data[0].timestamp).getDate() - 1) : undefined,\n        max: data.length > 0 ? new Date(data[data.length - 1].timestamp).setDate(new Date(data[data.length - 1].timestamp).getDate() + 1) : undefined\n      },\n      y_temp: {\n        type: 'linear',\n        position: 'left',\n        min: -50,\n        max: 50,\n        ticks: {\n          stepSize: 10\n        },\n        title: {\n          display: true,\n          text: 'Temperature (째C)'\n        },\n        grid: {\n          drawOnChartArea: true\n        }\n      },\n      y_humidity: {\n        type: 'linear',\n        position: 'right',\n        min: 0,\n        max: 100,\n        ticks: {\n          stepSize: 10\n        },\n        grid: {\n          drawOnChartArea: false\n        },\n        title: {\n          display: true,\n          text: 'Humidity (%)'\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    onClick: (event, elements) => {\n      if (elements.length > 0) {\n        const index = elements[0].index;\n        onPointClick(index);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_c = SensorChart;\nexport default SensorChart;\nvar _c;\n$RefreshReg$(_c, \"SensorChart\");","map":{"version":3,"names":["React","Line","Chart","TimeScale","jsxDEV","_jsxDEV","register","SensorChart","data","onPointClick","chartData","labels","map","d","Date","timestamp","datasets","label","x","y","temperature","fill","borderColor","yAxisID","humidity","options","scales","type","time","unit","displayFormats","day","tooltipFormat","ticks","autoSkip","maxRotation","minRotation","min","length","setDate","getDate","undefined","max","y_temp","position","stepSize","title","display","text","grid","drawOnChartArea","y_humidity","responsive","maintainAspectRatio","onClick","event","elements","index","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nooxy/Downloads/proj_final/proj_1/frontend/src/components/SensorChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chartjs-adapter-moment'; // Import moment adapter for Chart.js\r\nimport { Chart, TimeScale } from 'chart.js';\r\nimport 'chart.js/auto';\r\n\r\nChart.register(TimeScale); // Register the time scale\r\n\r\nfunction SensorChart({ data, onPointClick }) {\r\n    const chartData = {\r\n        labels: data.map(d => new Date(d.timestamp)),\r\n        datasets: [\r\n            {\r\n                label: 'Temperature (째C)',\r\n                data: data.map(d => ({ x: new Date(d.timestamp), y: d.temperature })),\r\n                fill: false,\r\n                borderColor: 'red',\r\n                yAxisID: 'y_temp',\r\n            },\r\n            {\r\n                label: 'Humidity (%)',\r\n                data: data.map(d => ({ x: new Date(d.timestamp), y: d.humidity })),\r\n                fill: false,\r\n                borderColor: 'blue',\r\n                yAxisID: 'y_humidity',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            x: {\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'day',\r\n                    displayFormats: {\r\n                        day: 'DD/MM/YYYY', // Change to dd/mm/yyyy format\r\n                    },\r\n                    tooltipFormat: 'DD/MM/YYYY', // Change tooltip to dd/mm/yyyy format\r\n                },\r\n                ticks: {\r\n                    autoSkip: false,\r\n                    maxRotation: 0,\r\n                    minRotation: 0,\r\n                },\r\n                min: data.length > 0 ? new Date(data[0].timestamp).setDate(new Date(data[0].timestamp).getDate() - 1) : undefined,\r\n                max: data.length > 0 ? new Date(data[data.length - 1].timestamp).setDate(new Date(data[data.length - 1].timestamp).getDate() + 1) : undefined,\r\n            },\r\n            y_temp: {\r\n                type: 'linear',\r\n                position: 'left',\r\n                min: -50,\r\n                max: 50,\r\n                ticks: {\r\n                    stepSize: 10,\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Temperature (째C)',\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: true,\r\n                },\r\n            },\r\n            y_humidity: {\r\n                type: 'linear',\r\n                position: 'right',\r\n                min: 0,\r\n                max: 100,\r\n                ticks: {\r\n                    stepSize: 10,\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: false,\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Humidity (%)',\r\n                },\r\n            },\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        onClick: (event, elements) => {\r\n            if (elements.length > 0) {\r\n                const index = elements[0].index;\r\n                onPointClick(index);\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: '400px' }}>\r\n            <Line data={chartData} options={options} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SensorChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}