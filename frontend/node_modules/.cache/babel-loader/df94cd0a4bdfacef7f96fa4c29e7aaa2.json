{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nooxy\\\\Downloads\\\\proj_final\\\\proj_1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport SensorChart from './components/SensorChart';\nimport DataInputForm from './components/DataInputForm';\nimport DataTable from './components/DataTable';\nimport LocationManager from './components/LocationManager'; // Import LocationManager\nimport './App.css';\nimport socket from './socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(''); // State to manage the current location\n\n  useEffect(() => {\n    if (!currentLocation) return;\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data/${currentLocation}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setData(data);\n    }).catch(err => {\n      console.error('Failed to fetch initial data:', err);\n      setError('Failed to fetch initial data');\n    });\n    socket.on('new_data', newData => {\n      if (newData.location === currentLocation) {\n        setData(prevData => {\n          const updatedData = [...prevData, newData];\n          updatedData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n          return updatedData;\n        });\n      }\n    });\n    socket.on('error', errorMsg => {\n      setError(errorMsg.error);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [currentLocation]); // Re-run when currentLocation changes\n\n  const handleDelete = index => {\n    const itemToDelete = data[index];\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data/${itemToDelete._id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to delete data');\n      }\n      setData(prevData => prevData.filter((_, i) => i !== index));\n    }).catch(err => {\n      console.error('Failed to delete data:', err);\n      setError('Failed to delete data');\n    });\n  };\n  const handleEdit = (index, updatedData) => {\n    const newData = [...data];\n    newData[index] = {\n      ...newData[index],\n      ...updatedData\n    };\n    newData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n    setData(newData);\n    setSelectedIndex(null);\n  };\n  const handlePointClick = index => {\n    setSelectedIndex(selectedIndex === index ? null : index);\n  };\n  const handleRowClick = index => {\n    if (selectedIndex === index) {\n      setSelectedIndex(null);\n    } else {\n      setSelectedIndex(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Environmental Data Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LocationManager, {\n      setCurrentLocation: setCurrentLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), error && data.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 44\n    }, this), currentLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SensorChart, {\n        data: data,\n        onPointClick: handlePointClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DataInputForm, {\n        currentLocation: currentLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: data,\n        onEdit: handleEdit,\n        onDelete: handleDelete,\n        selectedIndex: selectedIndex,\n        onRowClick: handleRowClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"yly+pl3ba68LDlCygVEgcenoNsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SensorChart","DataInputForm","DataTable","LocationManager","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","error","setError","selectedIndex","setSelectedIndex","currentLocation","setCurrentLocation","fetch","process","env","REACT_APP_BACKEND_URL","then","response","ok","Error","json","sort","a","b","Date","timestamp","catch","err","console","on","newData","location","prevData","updatedData","errorMsg","disconnect","handleDelete","index","itemToDelete","_id","method","filter","_","i","handleEdit","handlePointClick","handleRowClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onPointClick","onEdit","onDelete","onRowClick","_c","$RefreshReg$"],"sources":["C:/Users/nooxy/Downloads/proj_final/proj_1/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport SensorChart from './components/SensorChart';\r\nimport DataInputForm from './components/DataInputForm';\r\nimport DataTable from './components/DataTable';\r\nimport LocationManager from './components/LocationManager'; // Import LocationManager\r\nimport './App.css';\r\nimport socket from './socket';\r\n\r\nfunction App() {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [currentLocation, setCurrentLocation] = useState(''); // State to manage the current location\r\n\r\n    useEffect(() => {\r\n        if (!currentLocation) return;\r\n\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data/${currentLocation}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n                setData(data);\r\n            })\r\n            .catch(err => {\r\n                console.error('Failed to fetch initial data:', err);\r\n                setError('Failed to fetch initial data');\r\n            });\r\n\r\n        socket.on('new_data', newData => {\r\n            if (newData.location === currentLocation) {\r\n                setData(prevData => {\r\n                    const updatedData = [...prevData, newData];\r\n                    updatedData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n                    return updatedData;\r\n                });\r\n            }\r\n        });\r\n\r\n        socket.on('error', errorMsg => {\r\n            setError(errorMsg.error);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [currentLocation]); // Re-run when currentLocation changes\r\n\r\n    const handleDelete = (index) => {\r\n        const itemToDelete = data[index];\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data/${itemToDelete._id}`, {\r\n            method: 'DELETE',\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to delete data');\r\n            }\r\n            setData(prevData => prevData.filter((_, i) => i !== index));\r\n        })\r\n        .catch(err => {\r\n            console.error('Failed to delete data:', err);\r\n            setError('Failed to delete data');\r\n        });\r\n    };\r\n\r\n    const handleEdit = (index, updatedData) => {\r\n        const newData = [...data];\r\n        newData[index] = { ...newData[index], ...updatedData };\r\n        newData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n        setData(newData);\r\n        setSelectedIndex(null);\r\n    };\r\n\r\n    const handlePointClick = (index) => {\r\n        setSelectedIndex(selectedIndex === index ? null : index);\r\n    };\r\n\r\n    const handleRowClick = (index) => {\r\n        if (selectedIndex === index) {\r\n            setSelectedIndex(null);\r\n        } else {\r\n            setSelectedIndex(index);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Environmental Data Monitoring</h1>\r\n            <LocationManager setCurrentLocation={setCurrentLocation} />\r\n            {error && data.length === 0 && <p className=\"error\">{error}</p>}\r\n            {currentLocation && (\r\n                <>\r\n                    <SensorChart data={data} onPointClick={handlePointClick} />\r\n                    <DataInputForm currentLocation={currentLocation} />\r\n                    <DataTable\r\n                        data={data}\r\n                        onEdit={handleEdit}\r\n                        onDelete={handleDelete}\r\n                        selectedIndex={selectedIndex}\r\n                        onRowClick={handleRowClick}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,8BAA8B,CAAC,CAAC;AAC5D,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5DD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACmB,eAAe,EAAE;IAEtBE,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,aAAaL,eAAe,EAAE,CAAC,CACpEM,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACZ,IAAI,IAAI;MACVA,IAAI,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;MAClEpB,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC,CACDsB,KAAK,CAACC,GAAG,IAAI;MACVC,OAAO,CAACtB,KAAK,CAAC,+BAA+B,EAAEqB,GAAG,CAAC;MACnDpB,QAAQ,CAAC,8BAA8B,CAAC;IAC5C,CAAC,CAAC;IAENV,MAAM,CAACgC,EAAE,CAAC,UAAU,EAAEC,OAAO,IAAI;MAC7B,IAAIA,OAAO,CAACC,QAAQ,KAAKrB,eAAe,EAAE;QACtCL,OAAO,CAAC2B,QAAQ,IAAI;UAChB,MAAMC,WAAW,GAAG,CAAC,GAAGD,QAAQ,EAAEF,OAAO,CAAC;UAC1CG,WAAW,CAACZ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;UACzE,OAAOQ,WAAW;QACtB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEFpC,MAAM,CAACgC,EAAE,CAAC,OAAO,EAAEK,QAAQ,IAAI;MAC3B3B,QAAQ,CAAC2B,QAAQ,CAAC5B,KAAK,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAM;MACTT,MAAM,CAACsC,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,CAACzB,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEvB,MAAM0B,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,YAAY,GAAGlC,IAAI,CAACiC,KAAK,CAAC;IAChCzB,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,aAAauB,YAAY,CAACC,GAAG,EAAE,EAAE;MACvEC,MAAM,EAAE;IACZ,CAAC,CAAC,CACDxB,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACAd,OAAO,CAAC2B,QAAQ,IAAIA,QAAQ,CAACS,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKN,KAAK,CAAC,CAAC;IAC/D,CAAC,CAAC,CACDX,KAAK,CAACC,GAAG,IAAI;MACVC,OAAO,CAACtB,KAAK,CAAC,wBAAwB,EAAEqB,GAAG,CAAC;MAC5CpB,QAAQ,CAAC,uBAAuB,CAAC;IACrC,CAAC,CAAC;EACN,CAAC;EAED,MAAMqC,UAAU,GAAGA,CAACP,KAAK,EAAEJ,WAAW,KAAK;IACvC,MAAMH,OAAO,GAAG,CAAC,GAAG1B,IAAI,CAAC;IACzB0B,OAAO,CAACO,KAAK,CAAC,GAAG;MAAE,GAAGP,OAAO,CAACO,KAAK,CAAC;MAAE,GAAGJ;IAAY,CAAC;IACtDH,OAAO,CAACT,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;IACrEpB,OAAO,CAACyB,OAAO,CAAC;IAChBrB,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMoC,gBAAgB,GAAIR,KAAK,IAAK;IAChC5B,gBAAgB,CAACD,aAAa,KAAK6B,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAC;EAC5D,CAAC;EAED,MAAMS,cAAc,GAAIT,KAAK,IAAK;IAC9B,IAAI7B,aAAa,KAAK6B,KAAK,EAAE;MACzB5B,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACHA,gBAAgB,CAAC4B,KAAK,CAAC;IAC3B;EACJ,CAAC;EAED,oBACItC,OAAA;IAAKgD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBjD,OAAA;MAAAiD,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCrD,OAAA,CAACH,eAAe;MAACe,kBAAkB,EAAEA;IAAmB;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1D9C,KAAK,IAAIF,IAAI,CAACiD,MAAM,KAAK,CAAC,iBAAItD,OAAA;MAAGgD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAE1C;IAAK;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9D1C,eAAe,iBACZX,OAAA,CAAAE,SAAA;MAAA+C,QAAA,gBACIjD,OAAA,CAACN,WAAW;QAACW,IAAI,EAAEA,IAAK;QAACkD,YAAY,EAAET;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DrD,OAAA,CAACL,aAAa;QAACgB,eAAe,EAAEA;MAAgB;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDrD,OAAA,CAACJ,SAAS;QACNS,IAAI,EAAEA,IAAK;QACXmD,MAAM,EAAEX,UAAW;QACnBY,QAAQ,EAAEpB,YAAa;QACvB5B,aAAa,EAAEA,aAAc;QAC7BiD,UAAU,EAAEX;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA,eACJ,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjD,EAAA,CArGQD,GAAG;AAAAwD,EAAA,GAAHxD,GAAG;AAuGZ,eAAeA,GAAG;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}