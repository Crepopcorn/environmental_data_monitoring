{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nooxy\\\\Downloads\\\\proj_final\\\\proj_1\\\\frontend\\\\src\\\\components\\\\DataInputForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/DataInputForm.js\nimport React, { useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataInputForm() {\n  _s();\n  const [temperature, setTemperature] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [timestamp, setTimestamp] = useState('');\n  const [message, setMessage] = useState('');\n  const [existingTimestamps, setExistingTimestamps] = useState([]);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`).then(response => response.json()).then(data => {\n      const timestamps = data.map(entry => {\n        const date = new Date(entry.timestamp);\n        date.setSeconds(0, 0);\n        return date.toISOString();\n      });\n      setExistingTimestamps(timestamps);\n    }).catch(error => {\n      console.error('Failed to fetch initial data', error);\n    });\n  }, []);\n  useEffect(() => {\n    const singaporeTime = new Date().toLocaleString('en-SG', {\n      timeZone: 'Asia/Singapore',\n      hour12: false\n    });\n    const [date, time] = singaporeTime.split(', ');\n    const formattedTime = time.slice(0, 5);\n    const formattedTimestamp = `${date.split('/').reverse().join('-')}T${formattedTime}`;\n    setTimestamp(formattedTimestamp);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!temperature || !humidity) {\n      setMessage('Please enter both temperature and humidity.');\n      return;\n    }\n    if (temperature < -50 || temperature > 50) {\n      alert('Temperature out of range! Please input a value between -50 and 50.');\n      return;\n    }\n    if (humidity < 0 || humidity > 100) {\n      alert('Humidity out of range! Please input a value between 0 and 100.');\n      return;\n    }\n    const formattedTimestamp = timestamp || new Date().toISOString();\n    const dateToCheck = new Date(formattedTimestamp);\n    dateToCheck.setSeconds(0, 0);\n    if (existingTimestamps.includes(dateToCheck.toISOString())) {\n      alert('This timestamp (accurate to the minute) already exists. Please select a different timestamp.');\n      return;\n    }\n    const newData = {\n      temperature: parseFloat(temperature),\n      humidity: parseFloat(humidity),\n      timestamp: dateToCheck.toISOString()\n    };\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to submit data');\n      }\n      return response.json();\n    }).then(() => {\n      socket.emit('new_data', newData);\n      setExistingTimestamps(prevTimestamps => [...prevTimestamps, dateToCheck.toISOString()]);\n      setTemperature('');\n      setHumidity('');\n      const singaporeTime = new Date().toLocaleString('en-SG', {\n        timeZone: 'Asia/Singapore',\n        hour12: false\n      });\n      const [date, time] = singaporeTime.split(', ');\n      const newFormattedTime = time.slice(0, 5);\n      const newFormattedTimestamp = `${date.split('/').reverse().join('-')}T${newFormattedTime}`;\n      setTimestamp(newFormattedTimestamp);\n      setMessage('Data submitted successfully!');\n    }).catch(() => {\n      setMessage('Failed to submit data.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: temperature,\n          onChange: e => setTemperature(e.target.value),\n          className: \"input-box\",\n          step: \"0.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Humidity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: humidity,\n          onChange: e => setHumidity(e.target.value),\n          className: \"input-box\",\n          step: \"0.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Timestamp (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: timestamp,\n          onChange: e => setTimestamp(e.target.value),\n          className: \"input-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(DataInputForm, \"KBVHWa0D4s3n7vYZmsiL1kzAS3E=\");\n_c = DataInputForm;\nexport default DataInputForm;\nvar _c;\n$RefreshReg$(_c, \"DataInputForm\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","DataInputForm","_s","temperature","setTemperature","humidity","setHumidity","timestamp","setTimestamp","message","setMessage","existingTimestamps","setExistingTimestamps","fetch","process","env","REACT_APP_BACKEND_URL","then","response","json","data","timestamps","map","entry","date","Date","setSeconds","toISOString","catch","error","console","singaporeTime","toLocaleString","timeZone","hour12","time","split","formattedTime","slice","formattedTimestamp","reverse","join","handleSubmit","e","preventDefault","alert","dateToCheck","includes","newData","parseFloat","method","headers","body","JSON","stringify","ok","Error","emit","prevTimestamps","newFormattedTime","newFormattedTimestamp","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","className","step","_c","$RefreshReg$"],"sources":["C:/Users/nooxy/Downloads/proj_final/proj_1/frontend/src/components/DataInputForm.js"],"sourcesContent":["// frontend/src/components/DataInputForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport socket from '../socket'; \r\n\r\nfunction DataInputForm() {\r\n    const [temperature, setTemperature] = useState('');\r\n    const [humidity, setHumidity] = useState('');\r\n    const [timestamp, setTimestamp] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [existingTimestamps, setExistingTimestamps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const timestamps = data.map(entry => {\r\n                    const date = new Date(entry.timestamp);\r\n                    date.setSeconds(0, 0);\r\n                    return date.toISOString();\r\n                });\r\n                setExistingTimestamps(timestamps);\r\n            })\r\n            .catch(error => {\r\n                console.error('Failed to fetch initial data', error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const singaporeTime = new Date().toLocaleString('en-SG', {\r\n            timeZone: 'Asia/Singapore',\r\n            hour12: false,\r\n        });\r\n        const [date, time] = singaporeTime.split(', ');\r\n        const formattedTime = time.slice(0, 5);\r\n        const formattedTimestamp = `${date.split('/').reverse().join('-')}T${formattedTime}`;\r\n        setTimestamp(formattedTimestamp);\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!temperature || !humidity) {\r\n            setMessage('Please enter both temperature and humidity.');\r\n            return;\r\n        }\r\n\r\n        if (temperature < -50 || temperature > 50) {\r\n            alert('Temperature out of range! Please input a value between -50 and 50.');\r\n            return;\r\n        }\r\n\r\n        if (humidity < 0 || humidity > 100) {\r\n            alert('Humidity out of range! Please input a value between 0 and 100.');\r\n            return;\r\n        }\r\n\r\n        const formattedTimestamp = timestamp || new Date().toISOString();\r\n        const dateToCheck = new Date(formattedTimestamp);\r\n        dateToCheck.setSeconds(0, 0);\r\n\r\n        if (existingTimestamps.includes(dateToCheck.toISOString())) {\r\n            alert('This timestamp (accurate to the minute) already exists. Please select a different timestamp.');\r\n            return;\r\n        }\r\n\r\n        const newData = {\r\n            temperature: parseFloat(temperature),\r\n            humidity: parseFloat(humidity),\r\n            timestamp: dateToCheck.toISOString(),\r\n        };\r\n\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newData),\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit data');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(() => {\r\n            socket.emit('new_data', newData);\r\n\r\n            setExistingTimestamps(prevTimestamps => [...prevTimestamps, dateToCheck.toISOString()]);\r\n            setTemperature('');\r\n            setHumidity('');\r\n\r\n            const singaporeTime = new Date().toLocaleString('en-SG', {\r\n                timeZone: 'Asia/Singapore',\r\n                hour12: false,\r\n            });\r\n            const [date, time] = singaporeTime.split(', ');\r\n            const newFormattedTime = time.slice(0, 5);\r\n            const newFormattedTimestamp = `${date.split('/').reverse().join('-')}T${newFormattedTime}`;\r\n            setTimestamp(newFormattedTimestamp);\r\n\r\n            setMessage('Data submitted successfully!');\r\n        })\r\n        .catch(() => {\r\n            setMessage('Failed to submit data.');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Temperature:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={temperature}\r\n                        onChange={(e) => setTemperature(e.target.value)}\r\n                        className=\"input-box\"\r\n                        step=\"0.1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Humidity:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={humidity}\r\n                        onChange={(e) => setHumidity(e.target.value)}\r\n                        className=\"input-box\"\r\n                        step=\"0.1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Timestamp (optional):</label>\r\n                    <input\r\n                        type=\"datetime-local\"\r\n                        value={timestamp}\r\n                        onChange={(e) => setTimestamp(e.target.value)}\r\n                        className=\"input-box\"\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataInputForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACZgB,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,WAAW,CAAC,CACjDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,UAAU,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,IAAI;QACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAChB,SAAS,CAAC;QACtCiB,IAAI,CAACE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;QACrB,OAAOF,IAAI,CAACG,WAAW,CAAC,CAAC;MAC7B,CAAC,CAAC;MACFf,qBAAqB,CAACS,UAAU,CAAC;IACrC,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENhC,SAAS,CAAC,MAAM;IACZ,MAAMkC,aAAa,GAAG,IAAIN,IAAI,CAAC,CAAC,CAACO,cAAc,CAAC,OAAO,EAAE;MACrDC,QAAQ,EAAE,gBAAgB;MAC1BC,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,MAAM,CAACV,IAAI,EAAEW,IAAI,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAAC,IAAI,CAAC;IAC9C,MAAMC,aAAa,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACtC,MAAMC,kBAAkB,GAAG,GAAGf,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,IAAIJ,aAAa,EAAE;IACpF7B,YAAY,CAAC+B,kBAAkB,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACzC,WAAW,IAAI,CAACE,QAAQ,EAAE;MAC3BK,UAAU,CAAC,6CAA6C,CAAC;MACzD;IACJ;IAEA,IAAIP,WAAW,GAAG,CAAC,EAAE,IAAIA,WAAW,GAAG,EAAE,EAAE;MACvC0C,KAAK,CAAC,oEAAoE,CAAC;MAC3E;IACJ;IAEA,IAAIxC,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,GAAG,EAAE;MAChCwC,KAAK,CAAC,gEAAgE,CAAC;MACvE;IACJ;IAEA,MAAMN,kBAAkB,GAAGhC,SAAS,IAAI,IAAIkB,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAChE,MAAMmB,WAAW,GAAG,IAAIrB,IAAI,CAACc,kBAAkB,CAAC;IAChDO,WAAW,CAACpB,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAE5B,IAAIf,kBAAkB,CAACoC,QAAQ,CAACD,WAAW,CAACnB,WAAW,CAAC,CAAC,CAAC,EAAE;MACxDkB,KAAK,CAAC,8FAA8F,CAAC;MACrG;IACJ;IAEA,MAAMG,OAAO,GAAG;MACZ7C,WAAW,EAAE8C,UAAU,CAAC9C,WAAW,CAAC;MACpCE,QAAQ,EAAE4C,UAAU,CAAC5C,QAAQ,CAAC;MAC9BE,SAAS,EAAEuC,WAAW,CAACnB,WAAW,CAAC;IACvC,CAAC;IAEDd,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,WAAW,EAAE;MACnDkC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;IAChC,CAAC,CAAC,CACD/B,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACqC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACA,OAAOtC,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAC,MAAM;MACRnB,MAAM,CAAC2D,IAAI,CAAC,UAAU,EAAET,OAAO,CAAC;MAEhCpC,qBAAqB,CAAC8C,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAEZ,WAAW,CAACnB,WAAW,CAAC,CAAC,CAAC,CAAC;MACvFvB,cAAc,CAAC,EAAE,CAAC;MAClBE,WAAW,CAAC,EAAE,CAAC;MAEf,MAAMyB,aAAa,GAAG,IAAIN,IAAI,CAAC,CAAC,CAACO,cAAc,CAAC,OAAO,EAAE;QACrDC,QAAQ,EAAE,gBAAgB;QAC1BC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,MAAM,CAACV,IAAI,EAAEW,IAAI,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAAC,IAAI,CAAC;MAC9C,MAAMuB,gBAAgB,GAAGxB,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACzC,MAAMsB,qBAAqB,GAAG,GAAGpC,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,IAAIkB,gBAAgB,EAAE;MAC1FnD,YAAY,CAACoD,qBAAqB,CAAC;MAEnClD,UAAU,CAAC,8BAA8B,CAAC;IAC9C,CAAC,CAAC,CACDkB,KAAK,CAAC,MAAM;MACTlB,UAAU,CAAC,wBAAwB,CAAC;IACxC,CAAC,CAAC;EACN,CAAC;EAED,oBACIV,OAAA;IAAA6D,QAAA,gBACI7D,OAAA;MAAM8D,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBACzB7D,OAAA;QAAA6D,QAAA,gBACI7D,OAAA;UAAA6D,QAAA,EAAO;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BlE,OAAA;UACImE,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEjE,WAAY;UACnBkE,QAAQ,EAAG1B,CAAC,IAAKvC,cAAc,CAACuC,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAChDG,SAAS,EAAC,WAAW;UACrBC,IAAI,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlE,OAAA;QAAA6D,QAAA,gBACI7D,OAAA;UAAA6D,QAAA,EAAO;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBlE,OAAA;UACImE,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE/D,QAAS;UAChBgE,QAAQ,EAAG1B,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAC7CG,SAAS,EAAC,WAAW;UACrBC,IAAI,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlE,OAAA;QAAA6D,QAAA,gBACI7D,OAAA;UAAA6D,QAAA,EAAO;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpClE,OAAA;UACImE,IAAI,EAAC,gBAAgB;UACrBC,KAAK,EAAE7D,SAAU;UACjB8D,QAAQ,EAAG1B,CAAC,IAAKnC,YAAY,CAACmC,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAC9CG,SAAS,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlE,OAAA;QAAQmE,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACNzD,OAAO,iBAAIT,OAAA;MAAA6D,QAAA,EAAIpD;IAAO;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd;AAAChE,EAAA,CA5IQD,aAAa;AAAAwE,EAAA,GAAbxE,aAAa;AA8ItB,eAAeA,aAAa;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}