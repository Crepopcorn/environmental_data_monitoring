{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nooxy\\\\Downloads\\\\proj_final\\\\proj_1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport SensorChart from './components/SensorChart';\nimport DataInputForm from './components/DataInputForm';\nimport DataTable from './components/DataTable';\nimport './App.css'; // Ensure the CSS file is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\nfunction App() {\n  _s();\n  // Declare hooks at the top level\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(null); // Selected index state for highlighting rows\n\n  // useEffect for fetching initial data and setting up socket listeners\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Sort the data based on timestamp (earliest to latest)\n      data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setData(data);\n    }).catch(err => {\n      console.error('Failed to fetch initial data:', err);\n      setError('Failed to fetch initial data');\n    });\n    socket.on('update', newData => {\n      setData(prevData => {\n        const updatedData = [...prevData, newData];\n        // Sort the data based on timestamp (earliest to latest)\n        updatedData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n        return updatedData;\n      });\n    });\n    socket.on('error', errorMsg => {\n      setError(errorMsg.error);\n    });\n\n    // Clean up socket connection on component unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // Function to handle edits\n  const handleEdit = (index, updatedData) => {\n    const newData = [...data];\n    newData[index] = {\n      ...newData[index],\n      ...updatedData\n    };\n    // Sort the data based on timestamp (earliest to latest)\n    newData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n    setData(newData);\n    setSelectedIndex(null); // Exit edit mode\n  };\n\n  // Function to handle deletions\n  const handleDelete = index => {\n    const newData = data.filter((_, i) => i !== index);\n    setData(newData);\n    setSelectedIndex(null); // Clear the selection after deletion\n  };\n\n  // Function to handle point click on the chart\n  const handlePointClick = index => {\n    setSelectedIndex(selectedIndex === index ? null : index); // Deselect if the same point is clicked\n  };\n\n  // Function to handle row click in the table\n  const handleRowClick = index => {\n    if (selectedIndex === index) {\n      setSelectedIndex(null); // Deselect if the same row is clicked\n    } else {\n      setSelectedIndex(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Environmental Data Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), error && data.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(SensorChart, {\n      data: data,\n      onPointClick: handlePointClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataInputForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: data,\n      onEdit: handleEdit,\n      onDelete: handleDelete,\n      selectedIndex: selectedIndex,\n      onRowClick: handleRowClick // Pass the handleRowClick function to DataTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"JbOPi0YWSwmHhxo/5888BG5v2xA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","SensorChart","DataInputForm","DataTable","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_BACKEND_URL","App","_s","data","setData","error","setError","selectedIndex","setSelectedIndex","fetch","then","response","ok","Error","json","sort","a","b","Date","timestamp","catch","err","console","on","newData","prevData","updatedData","errorMsg","disconnect","handleEdit","index","handleDelete","filter","_","i","handlePointClick","handleRowClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onPointClick","onEdit","onDelete","onRowClick","_c","$RefreshReg$"],"sources":["C:/Users/nooxy/Downloads/proj_final/proj_1/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport SensorChart from './components/SensorChart';\r\nimport DataInputForm from './components/DataInputForm';\r\nimport DataTable from './components/DataTable';\r\nimport './App.css'; // Ensure the CSS file is imported\r\n\r\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\r\n\r\nfunction App() {\r\n    // Declare hooks at the top level\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(null); // Selected index state for highlighting rows\r\n\r\n    // useEffect for fetching initial data and setting up socket listeners\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                // Sort the data based on timestamp (earliest to latest)\r\n                data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n                setData(data);\r\n            })\r\n            .catch(err => {\r\n                console.error('Failed to fetch initial data:', err);\r\n                setError('Failed to fetch initial data');\r\n            });\r\n\r\n        socket.on('update', newData => {\r\n            setData(prevData => {\r\n                const updatedData = [...prevData, newData];\r\n                // Sort the data based on timestamp (earliest to latest)\r\n                updatedData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n                return updatedData;\r\n            });\r\n        });\r\n\r\n        socket.on('error', errorMsg => {\r\n            setError(errorMsg.error);\r\n        });\r\n\r\n        // Clean up socket connection on component unmount\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    // Function to handle edits\r\n    const handleEdit = (index, updatedData) => {\r\n        const newData = [...data];\r\n        newData[index] = { ...newData[index], ...updatedData };\r\n        // Sort the data based on timestamp (earliest to latest)\r\n        newData.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n        setData(newData);\r\n        setSelectedIndex(null); // Exit edit mode\r\n    };\r\n\r\n    // Function to handle deletions\r\n    const handleDelete = (index) => {\r\n        const newData = data.filter((_, i) => i !== index);\r\n        setData(newData);\r\n        setSelectedIndex(null); // Clear the selection after deletion\r\n    };\r\n\r\n    // Function to handle point click on the chart\r\n    const handlePointClick = (index) => {\r\n        setSelectedIndex(selectedIndex === index ? null : index); // Deselect if the same point is clicked\r\n    };\r\n\r\n    // Function to handle row click in the table\r\n    const handleRowClick = (index) => {\r\n        if (selectedIndex === index) {\r\n            setSelectedIndex(null); // Deselect if the same row is clicked\r\n        } else {\r\n            setSelectedIndex(index);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Environmental Data Monitoring</h1>\r\n            {error && data.length === 0 && <p className=\"error\">{error}</p>}\r\n            <SensorChart data={data} onPointClick={handlePointClick} />\r\n            <DataInputForm />\r\n            <DataTable\r\n                data={data}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                selectedIndex={selectedIndex}\r\n                onRowClick={handleRowClick} // Pass the handleRowClick function to DataTable\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}