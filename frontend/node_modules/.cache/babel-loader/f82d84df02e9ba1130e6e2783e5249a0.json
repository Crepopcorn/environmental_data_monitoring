{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nooxy\\\\Downloads\\\\proj_final\\\\proj_1\\\\frontend\\\\src\\\\components\\\\DataInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\nfunction DataInputForm() {\n  _s();\n  const [temperature, setTemperature] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [timestamp, setTimestamp] = useState('');\n  const [message, setMessage] = useState('');\n  const [existingTimestamps, setExistingTimestamps] = useState([]);\n\n  // Fetch existing data to store timestamps\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`).then(response => response.json()).then(data => {\n      const timestamps = data.map(entry => new Date(entry.timestamp).toISOString());\n      setExistingTimestamps(timestamps);\n    }).catch(error => {\n      console.error('Failed to fetch initial data', error);\n    });\n  }, []);\n\n  // Set the default timestamp to Singapore time when the component loads\n  useEffect(() => {\n    const singaporeTime = new Date().toLocaleString('en-SG', {\n      timeZone: 'Asia/Singapore',\n      hour12: false\n    });\n    const [date, time] = singaporeTime.split(', ');\n    const formattedTimestamp = `${date.split('/').reverse().join('-')}T${time}`;\n    setTimestamp(formattedTimestamp);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!temperature || !humidity) {\n      setMessage('Please enter both temperature and humidity.');\n      return;\n    }\n\n    // Validation: Check if temperature and humidity are within the allowed range\n    if (temperature < -50 || temperature > 50) {\n      alert('Temperature out of range! Please input a value between -50 and 50.');\n      return;\n    }\n    if (humidity < 0 || humidity > 100) {\n      alert('Humidity out of range! Please input a value between 0 and 100.');\n      return;\n    }\n\n    // Check for duplicate timestamp\n    const formattedTimestamp = timestamp || new Date().toISOString();\n    if (existingTimestamps.includes(new Date(formattedTimestamp).toISOString())) {\n      alert('This timestamp already exists. Please select a different timestamp.');\n      return;\n    }\n\n    // Create a data object\n    const newData = {\n      temperature: parseFloat(temperature),\n      humidity: parseFloat(humidity),\n      timestamp: formattedTimestamp\n    };\n\n    // Emit the new data through the socket\n    socket.emit('new_data', newData);\n\n    // Update existing timestamps\n    setExistingTimestamps(prevTimestamps => [...prevTimestamps, formattedTimestamp]);\n\n    // Clear form inputs\n    setTemperature('');\n    setHumidity('');\n\n    // Reset to current Singapore time\n    const singaporeTime = new Date().toLocaleString('en-SG', {\n      timeZone: 'Asia/Singapore',\n      hour12: false\n    });\n    const [date, time] = singaporeTime.split(', ');\n    const newFormattedTimestamp = `${date.split('/').reverse().join('-')}T${time}`;\n    setTimestamp(newFormattedTimestamp);\n    setMessage('Data submitted successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: temperature,\n          onChange: e => setTemperature(e.target.value),\n          className: \"input-box\",\n          step: \"0.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Humidity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: humidity,\n          onChange: e => setHumidity(e.target.value),\n          className: \"input-box\",\n          step: \"0.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Timestamp (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: timestamp,\n          onChange: e => setTimestamp(e.target.value),\n          className: \"input-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(DataInputForm, \"KBVHWa0D4s3n7vYZmsiL1kzAS3E=\");\n_c = DataInputForm;\nexport default DataInputForm;\nvar _c;\n$RefreshReg$(_c, \"DataInputForm\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_BACKEND_URL","DataInputForm","_s","temperature","setTemperature","humidity","setHumidity","timestamp","setTimestamp","message","setMessage","existingTimestamps","setExistingTimestamps","fetch","then","response","json","data","timestamps","map","entry","Date","toISOString","catch","error","console","singaporeTime","toLocaleString","timeZone","hour12","date","time","split","formattedTimestamp","reverse","join","handleSubmit","e","preventDefault","alert","includes","newData","parseFloat","emit","prevTimestamps","newFormattedTimestamp","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","className","step","_c","$RefreshReg$"],"sources":["C:/Users/nooxy/Downloads/proj_final/proj_1/frontend/src/components/DataInputForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\r\n\r\nfunction DataInputForm() {\r\n    const [temperature, setTemperature] = useState('');\r\n    const [humidity, setHumidity] = useState('');\r\n    const [timestamp, setTimestamp] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [existingTimestamps, setExistingTimestamps] = useState([]);\r\n\r\n    // Fetch existing data to store timestamps\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL}/api/data`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const timestamps = data.map(entry => new Date(entry.timestamp).toISOString());\r\n                setExistingTimestamps(timestamps);\r\n            })\r\n            .catch(error => {\r\n                console.error('Failed to fetch initial data', error);\r\n            });\r\n    }, []);\r\n\r\n    // Set the default timestamp to Singapore time when the component loads\r\n    useEffect(() => {\r\n        const singaporeTime = new Date().toLocaleString('en-SG', {\r\n            timeZone: 'Asia/Singapore',\r\n            hour12: false, \r\n        });\r\n        const [date, time] = singaporeTime.split(', ');\r\n        const formattedTimestamp = `${date.split('/').reverse().join('-')}T${time}`;\r\n        setTimestamp(formattedTimestamp);\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!temperature || !humidity) {\r\n            setMessage('Please enter both temperature and humidity.');\r\n            return;\r\n        }\r\n\r\n        // Validation: Check if temperature and humidity are within the allowed range\r\n        if (temperature < -50 || temperature > 50) {\r\n            alert('Temperature out of range! Please input a value between -50 and 50.');\r\n            return;\r\n        }\r\n\r\n        if (humidity < 0 || humidity > 100) {\r\n            alert('Humidity out of range! Please input a value between 0 and 100.');\r\n            return;\r\n        }\r\n\r\n        // Check for duplicate timestamp\r\n        const formattedTimestamp = timestamp || new Date().toISOString();\r\n        if (existingTimestamps.includes(new Date(formattedTimestamp).toISOString())) {\r\n            alert('This timestamp already exists. Please select a different timestamp.');\r\n            return;\r\n        }\r\n\r\n        // Create a data object\r\n        const newData = {\r\n            temperature: parseFloat(temperature),\r\n            humidity: parseFloat(humidity),\r\n            timestamp: formattedTimestamp,\r\n        };\r\n\r\n        // Emit the new data through the socket\r\n        socket.emit('new_data', newData);\r\n\r\n        // Update existing timestamps\r\n        setExistingTimestamps(prevTimestamps => [...prevTimestamps, formattedTimestamp]);\r\n\r\n        // Clear form inputs\r\n        setTemperature('');\r\n        setHumidity('');\r\n        \r\n        // Reset to current Singapore time\r\n        const singaporeTime = new Date().toLocaleString('en-SG', {\r\n            timeZone: 'Asia/Singapore',\r\n            hour12: false, \r\n        });\r\n        const [date, time] = singaporeTime.split(', ');\r\n        const newFormattedTimestamp = `${date.split('/').reverse().join('-')}T${time}`;\r\n        setTimestamp(newFormattedTimestamp);\r\n\r\n        setMessage('Data submitted successfully!');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Temperature:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={temperature}\r\n                        onChange={(e) => setTemperature(e.target.value)}\r\n                        className=\"input-box\"\r\n                        step=\"0.1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Humidity:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={humidity}\r\n                        onChange={(e) => setHumidity(e.target.value)}\r\n                        className=\"input-box\"\r\n                        step=\"0.1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Timestamp (optional):</label>\r\n                    <input\r\n                        type=\"datetime-local\"\r\n                        value={timestamp}\r\n                        onChange={(e) => setTimestamp(e.target.value)}\r\n                        className=\"input-box\"\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataInputForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}